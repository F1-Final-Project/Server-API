process.env.NODE_ENV = 'test';const User = require('db-worker/lib/models/user');const config = require('config');const chai = require('chai');const chaiHttp = require('chai-http');const server = require('../index');const should = chai.should();chai.use(chaiHttp);describe('Auth', () => {    beforeEach((done) => {        User.deleteMany({}, (err) => {            done();        });    });    describe('/POST auth', () => {        it('it should POST a auth', (done) => {            const data = new User({                email: "test@test.com",                password: "test",                firstName: "test",                lastName: "test",                permission: "test"            });            data.save((err, user) => {                chai.request(server)                    .post('/auth')                    .send({email: 'test@test.com', password: 'test'})                    .end((err, res) => {                        res.should.have.status(200);                        res.body.should.be.a('object');                        res.body.should.have.property('id');                        res.body.should.have.property('token');                        res.body.should.have.property('permission');                        res.body.should.have.property('id').eql(user.id);                        done();                    });            });        });        it('it should not POST auth (invalid email)', (done) => {            const data = new User({                email: "test@test.com",                password: "test",                firstName: "test",                lastName: "test",                permission: "test"            });            data.save(() => {                chai.request(server)                    .post('/auth')                    .send({email: 'test1@test.com', password: 'test'})                    .end((err, res) => {                        res.should.have.status(401);                        res.body.should.have.property('error').eql('Invalid email');                        done();                    });            });        });        it('it should not POST auth (invalid password)', (done) => {            const data = new User({                email: "test@test.com",                password: "test",                firstName: "test",                lastName: "test",                permission: "test"            });            data.save(() => {                chai.request(server)                    .post('/auth')                    .send({email: 'test@test.com', password: 'test1'})                    .end((err, res) => {                        res.should.have.status(401);                        res.body.should.have.property('error').eql('Invalid password');                        done();                    });            });        });    });});